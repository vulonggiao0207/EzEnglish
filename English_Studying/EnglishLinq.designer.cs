#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace English_Studying
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="English")]
	public partial class EnglishLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTuVung(TuVung instance);
    partial void UpdateTuVung(TuVung instance);
    partial void DeleteTuVung(TuVung instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertTuDien(TuDien instance);
    partial void UpdateTuDien(TuDien instance);
    partial void DeleteTuDien(TuDien instance);
    #endregion
		
		public EnglishLinqDataContext() :
        base(global::English_Studying.Properties.Settings.Default.EnglishConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EnglishLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnglishLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnglishLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnglishLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TuVung> TuVungs
		{
			get
			{
				return this.GetTable<TuVung>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<TuDien> TuDiens
		{
			get
			{
				return this.GetTable<TuDien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuVung")]
	public partial class TuVung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTuVung;
		
		private System.Nullable<int> _IDTuDien;
		
		private string _Tu;
		
		private string _LoaiTu;
		
		private string _NghiaTu;
		
		private string _HinhAnh;
		
		private string _ApDung;
		
		private EntityRef<TuDien> _TuDien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTuVungChanging(int value);
    partial void OnIDTuVungChanged();
    partial void OnIDTuDienChanging(System.Nullable<int> value);
    partial void OnIDTuDienChanged();
    partial void OnTuChanging(string value);
    partial void OnTuChanged();
    partial void OnLoaiTuChanging(string value);
    partial void OnLoaiTuChanged();
    partial void OnNghiaTuChanging(string value);
    partial void OnNghiaTuChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnApDungChanging(string value);
    partial void OnApDungChanged();
    #endregion
		
		public TuVung()
		{
			this._TuDien = default(EntityRef<TuDien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTuVung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTuVung
		{
			get
			{
				return this._IDTuVung;
			}
			set
			{
				if ((this._IDTuVung != value))
				{
					this.OnIDTuVungChanging(value);
					this.SendPropertyChanging();
					this._IDTuVung = value;
					this.SendPropertyChanged("IDTuVung");
					this.OnIDTuVungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTuDien", DbType="Int")]
		public System.Nullable<int> IDTuDien
		{
			get
			{
				return this._IDTuDien;
			}
			set
			{
				if ((this._IDTuDien != value))
				{
					if (this._TuDien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTuDienChanging(value);
					this.SendPropertyChanging();
					this._IDTuDien = value;
					this.SendPropertyChanged("IDTuDien");
					this.OnIDTuDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tu", DbType="NVarChar(50)")]
		public string Tu
		{
			get
			{
				return this._Tu;
			}
			set
			{
				if ((this._Tu != value))
				{
					this.OnTuChanging(value);
					this.SendPropertyChanging();
					this._Tu = value;
					this.SendPropertyChanged("Tu");
					this.OnTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTu", DbType="VarChar(10)")]
		public string LoaiTu
		{
			get
			{
				return this._LoaiTu;
			}
			set
			{
				if ((this._LoaiTu != value))
				{
					this.OnLoaiTuChanging(value);
					this.SendPropertyChanging();
					this._LoaiTu = value;
					this.SendPropertyChanged("LoaiTu");
					this.OnLoaiTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NghiaTu", DbType="NVarChar(50)")]
		public string NghiaTu
		{
			get
			{
				return this._NghiaTu;
			}
			set
			{
				if ((this._NghiaTu != value))
				{
					this.OnNghiaTuChanging(value);
					this.SendPropertyChanging();
					this._NghiaTu = value;
					this.SendPropertyChanged("NghiaTu");
					this.OnNghiaTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ApDung
		{
			get
			{
				return this._ApDung;
			}
			set
			{
				if ((this._ApDung != value))
				{
					this.OnApDungChanging(value);
					this.SendPropertyChanging();
					this._ApDung = value;
					this.SendPropertyChanged("ApDung");
					this.OnApDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuDien_TuVung", Storage="_TuDien", ThisKey="IDTuDien", OtherKey="IDTuDien", IsForeignKey=true)]
		public TuDien TuDien
		{
			get
			{
				return this._TuDien.Entity;
			}
			set
			{
				TuDien previousValue = this._TuDien.Entity;
				if (((previousValue != value) 
							|| (this._TuDien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TuDien.Entity = null;
						previousValue.TuVungs.Remove(this);
					}
					this._TuDien.Entity = value;
					if ((value != null))
					{
						value.TuVungs.Add(this);
						this._IDTuDien = value.IDTuDien;
					}
					else
					{
						this._IDTuDien = default(Nullable<int>);
					}
					this.SendPropertyChanged("TuDien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDNguoiDung;
		
		private string _MatKhau;
		
		private EntitySet<TuDien> _TuDiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNguoiDungChanging(string value);
    partial void OnIDNguoiDungChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public NguoiDung()
		{
			this._TuDiens = new EntitySet<TuDien>(new Action<TuDien>(this.attach_TuDiens), new Action<TuDien>(this.detach_TuDiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoiDung", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDNguoiDung
		{
			get
			{
				return this._IDNguoiDung;
			}
			set
			{
				if ((this._IDNguoiDung != value))
				{
					this.OnIDNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IDNguoiDung = value;
					this.SendPropertyChanged("IDNguoiDung");
					this.OnIDNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(10)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_TuDien", Storage="_TuDiens", ThisKey="IDNguoiDung", OtherKey="IDNguoiDung")]
		public EntitySet<TuDien> TuDiens
		{
			get
			{
				return this._TuDiens;
			}
			set
			{
				this._TuDiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuDiens(TuDien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_TuDiens(TuDien entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuDien")]
	public partial class TuDien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTuDien;
		
		private string _TenTuDien;
		
		private string _IDNguoiDung;
		
		private EntitySet<TuVung> _TuVungs;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTuDienChanging(int value);
    partial void OnIDTuDienChanged();
    partial void OnTenTuDienChanging(string value);
    partial void OnTenTuDienChanged();
    partial void OnIDNguoiDungChanging(string value);
    partial void OnIDNguoiDungChanged();
    #endregion
		
		public TuDien()
		{
			this._TuVungs = new EntitySet<TuVung>(new Action<TuVung>(this.attach_TuVungs), new Action<TuVung>(this.detach_TuVungs));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IdTuDien", Storage="_IdTuDien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTuDien
		{
			get
			{
				return this._IdTuDien;
			}
			set
			{
				if ((this._IdTuDien != value))
				{
					this.OnIDTuDienChanging(value);
					this.SendPropertyChanging();
					this._IdTuDien = value;
					this.SendPropertyChanged("IDTuDien");
					this.OnIDTuDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTuDien", DbType="NVarChar(30)")]
		public string TenTuDien
		{
			get
			{
				return this._TenTuDien;
			}
			set
			{
				if ((this._TenTuDien != value))
				{
					this.OnTenTuDienChanging(value);
					this.SendPropertyChanging();
					this._TenTuDien = value;
					this.SendPropertyChanged("TenTuDien");
					this.OnTenTuDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNguoiDung", DbType="NVarChar(50)")]
		public string IDNguoiDung
		{
			get
			{
				return this._IDNguoiDung;
			}
			set
			{
				if ((this._IDNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IDNguoiDung = value;
					this.SendPropertyChanged("IDNguoiDung");
					this.OnIDNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuDien_TuVung", Storage="_TuVungs", ThisKey="IDTuDien", OtherKey="IDTuDien")]
		public EntitySet<TuVung> TuVungs
		{
			get
			{
				return this._TuVungs;
			}
			set
			{
				this._TuVungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_TuDien", Storage="_NguoiDung", ThisKey="IDNguoiDung", OtherKey="IDNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.TuDiens.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.TuDiens.Add(this);
						this._IDNguoiDung = value.IDNguoiDung;
					}
					else
					{
						this._IDNguoiDung = default(string);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuVungs(TuVung entity)
		{
			this.SendPropertyChanging();
			entity.TuDien = this;
		}
		
		private void detach_TuVungs(TuVung entity)
		{
			this.SendPropertyChanging();
			entity.TuDien = null;
		}
	}
}
#pragma warning restore 1591
